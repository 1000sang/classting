version: "3.2"
services:
  dynamodb:
    platform: linux/amd64
    image: amazon/dynamodb-local:2.2.1
    command: -jar DynamoDBLocal.jar -sharedDb -dbPath /home/dynamodblocal/data/
    volumes:
      - ./dynamodb:/home/dynamodblocal/data
    ports:
      - "8000:8000"

  dynamodb-admin:
    platform: linux/amd64
    image: aaronshaf/dynamodb-admin
    ports:
      - "8001:8001"
    environment:
      DYNAMO_ENDPOINT: "http://dynamodb:8000"
#      AWS_REGION: "ap-northeast-2"
#      AWS_ACCESS_KEY_ID: local
#      AWS_SECRET_ACCESS_KEY: local
    depends_on:
      - dynamodb

  dynamodb_migrator:
    platform: linux/amd64
    image: banst/awscli:1.18.76
    container_name: app-dynamodb_migrator
    working_dir: /home/dynamodblocal
    command: dynamodb create-table --cli-input-json file://account.json --endpoint-url http://dynamodb:8000
    volumes:
      - ./dynamodb/schema:/home/dynamodblocal
    environment:
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
      - AWS_DEFAULT_REGION=ap-northeast-2
    depends_on:
      - dynamodb

  dynamodb_seeder:
    platform: linux/amd64
    image: banst/awscli:1.18.76
    container_name: app-dynamodb_seeder
    working_dir: /home/dynamodblocal
    command: dynamodb batch-write-item --request-items file://account-seeder.json --endpoint-url http://dynamodb:8000
    volumes:
      - ./dynamodb/schema:/home/dynamodblocal
    environment:
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
      - AWS_DEFAULT_REGION=ap-northeast-2
    depends_on:
      - dynamodb
      - dynamodb_migrator
    restart: on-failure

  server:
    platform: linux/amd64
    container_name: server
    build:
      dockerfile: server/Dockerfile
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./server/src:/app/src
    networks:
      - app-network
#    env_file:
#      - ./server/.env
    depends_on:
      - dynamodb

networks:
  app-network:
    driver: bridge